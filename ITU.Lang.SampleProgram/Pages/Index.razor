@page "/"

<div class="flex flex-col items-center justify-center w-full h-full pt-12">
    <div class="text-center">
        <div class="text-6xl"><span id="wpm">0</span> wpm</div>
        <div class="flex items-baseline justify-center">
            <div id="timer">00:00</div>
            <div>&middot;</div>
            <div><span id="accuracy">0</span> %</div>
        </div>
    </div>
    <div class="flex justify-center items-center w-full p-2 m-4 bg-gray-100 focus-within:bg-gray-200"
        @onclick="FocusTextInput">
        <input type="text" @ref="textInput" autofocus class="text-2xl bg-transparent focus:outline-none"
            @oninput="OnInputChanged" value="@Input" />
    </div>
    <div id="targetContainer" class="w-full h-60 max-w-2xl text-xl overflow-y-auto">
        @* TODO: PRINT SEGMENTS with correct classes *@
        @foreach (var word in words.Previous)
        {
            <span>@word.FullContent (@word.Segments.Count)<span> </span></span>
        }

        <span>@words.Current.FullContent (@words.Current.Segments.Count)<span> </span></span>

        @foreach (var word in words.Future)
        {
            <span>@word <span> </span></span>
        }
    </div>
</div>

@code {
    private ElementReference textInput { get; set; }

    private Words words = new Words();
    /*
    private Statistics stats = new Statistics();
    private string wpm = "0";
    private string timer = "00:00";
    private string accuracy = "0";
    */
    private bool hasStarted = false;

    public string Input { get; set; }

    protected override void OnInitialized()
    {
        System.Console.WriteLine(words.Current.FullContent);
    }

    private void OnInputChanged(ChangeEventArgs evt)
    {
        if (!hasStarted)
        {
            hasStarted = true;
            StartStatsTimer();
        }

        Input = evt.Value.ToString();

        words.Current.ComputeSegments(Input);
        System.Console.WriteLine($"({words.Current.Segments.Count}): {string.Join(", ", words.Current.Segments)}");

        if (Input.EndsWith(" "))
        {
            words.NextWord();
            Input = "";
        }


        //elements = renderWords(words);
    }

    private void StartStatsTimer()
    {

    }

    public async Task FocusTextInput() => await textInput.FocusAsync();
}
